{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "fluidsim",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Fluidsim is an extensible framework for studying fluid dynamics with\nnumerical simulations using Python. Fluidsim is an object-oriented library\nto develop solvers (mainly using pseudo-spectral methods) by writing mainly\nPython code. The result is very efficient even compared to a pure Fortran or\nC++ code since the time-consuming tasks are performed by optimized compiled\nfunctions.\n",
   "doc_url": "https://fluidsim.readthedocs.io",
   "home": "https://foss.heptapod.net/fluiddyn/fluidsim",
   "license": "LicenseRef-CeCILL",
   "license_file": "LICENSE.txt",
   "summary": "Framework for studying fluid dynamics with simulations."
  },
  "build": {
   "entry_points": [
    "fluidsim = fluidsim.util.console.__main__:run",
    "fluidsim-bench = fluidsim.util.console.__main__:run_bench",
    "fluidsim-bench-analysis = fluidsim.util.console.__main__:run_bench_analysis",
    "fluidsim-create-xml-description = fluidsim.base.output:run",
    "fluidsim-profile = fluidsim.util.console.__main__:run_profile",
    "fluidsim-test = fluidsim.util.testing:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "CyrilleBonamy",
    "paugier",
    "ashwinvis"
   ]
  },
  "package": {
   "name": "fluidsim",
   "version": "0.8.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_stdlib_stub"
   ],
   "host": [
    "pip",
    "python",
    "meson-python",
    "numpy",
    "transonic >=0.6.4",
    "pythran >=0.9.7"
   ],
   "run": [
    "python",
    "ipython",
    "transonic >=0.6.4",
    "fluidsim-core >=0.8.0",
    "fluidfft >=0.4.0",
    "numpy >=1.15.4",
    "matplotlib-base",
    "pandas",
    "xarray",
    "pytest",
    "rich",
    "importlib_metadata"
   ]
  },
  "source": {
   "sha256": "eb36c2d7d588fbb088af026683a12bb14aa126bbbc91b999009130d6cb7920f9",
   "url": "https://pypi.io/packages/source/f/fluidsim/fluidsim-0.8.2.tar.gz"
  },
  "test": {
   "imports": [
    "fluidsim",
    "fluidsim.base.output.__pythran__.increments",
    "fluidsim.base.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.base.time_stepping.__pythran__.pseudo_spect",
    "fluidsim.operators.__pythran__.operators2d",
    "fluidsim.operators.__pythran__.operators3d",
    "fluidsim.solvers.ns2d.__pythran__.solver",
    "fluidsim.solvers.ns2d.bouss.__pythran__.solver",
    "fluidsim.solvers.ns2d.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.solvers.ns2d.strat.__pythran__.solver",
    "fluidsim.solvers.ns3d.forcing.__pythran__.watu",
    "fluidsim.solvers.ns3d.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.solvers.ns3d.strat.__pythran__.solver",
    "fluidsim.solvers.plate2d.__pythran__.operators",
    "fluidsim.solvers.plate2d.output.__pythran__.correlations_freq",
    "fluidsim.solvers.sphere.sw1l.__pythran__.solver",
    "fluidsim.solvers.sw1l.__pythran__.operators",
    "fluidsim.solvers.sw1l.__pythran__.solver",
    "fluidsim.solvers.sw1l.output.__pythran__.base",
    "fluidsim.util.__pythran__.mini_oper_modif_resol"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "meson-python",
    "numpy",
    "pip",
    "python",
    "pythran",
    "transonic"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fluidfft",
    "fluidsim-core",
    "importlib_metadata",
    "ipython",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pytest",
    "python",
    "rich",
    "transonic",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Fluidsim is an extensible framework for studying fluid dynamics with\nnumerical simulations using Python. Fluidsim is an object-oriented library\nto develop solvers (mainly using pseudo-spectral methods) by writing mainly\nPython code. The result is very efficient even compared to a pure Fortran or\nC++ code since the time-consuming tasks are performed by optimized compiled\nfunctions.\n",
   "doc_url": "https://fluidsim.readthedocs.io",
   "home": "https://foss.heptapod.net/fluiddyn/fluidsim",
   "license": "LicenseRef-CeCILL",
   "license_file": "LICENSE.txt",
   "summary": "Framework for studying fluid dynamics with simulations."
  },
  "build": {
   "entry_points": [
    "fluidsim = fluidsim.util.console.__main__:run",
    "fluidsim-bench = fluidsim.util.console.__main__:run_bench",
    "fluidsim-bench-analysis = fluidsim.util.console.__main__:run_bench_analysis",
    "fluidsim-create-xml-description = fluidsim.base.output:run",
    "fluidsim-profile = fluidsim.util.console.__main__:run_profile",
    "fluidsim-test = fluidsim.util.testing:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "CyrilleBonamy",
    "paugier",
    "ashwinvis"
   ]
  },
  "package": {
   "name": "fluidsim",
   "version": "0.8.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_stdlib_stub"
   ],
   "host": [
    "pip",
    "python",
    "meson-python",
    "numpy",
    "transonic >=0.6.4",
    "pythran >=0.9.7",
    "clang"
   ],
   "run": [
    "python",
    "ipython",
    "transonic >=0.6.4",
    "fluidsim-core >=0.8.0",
    "fluidfft >=0.4.0",
    "numpy >=1.15.4",
    "matplotlib-base",
    "pandas",
    "xarray",
    "pytest",
    "rich",
    "importlib_metadata"
   ]
  },
  "source": {
   "sha256": "eb36c2d7d588fbb088af026683a12bb14aa126bbbc91b999009130d6cb7920f9",
   "url": "https://pypi.io/packages/source/f/fluidsim/fluidsim-0.8.2.tar.gz"
  },
  "test": {
   "imports": [
    "fluidsim",
    "fluidsim.base.output.__pythran__.increments",
    "fluidsim.base.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.base.time_stepping.__pythran__.pseudo_spect",
    "fluidsim.operators.__pythran__.operators2d",
    "fluidsim.operators.__pythran__.operators3d",
    "fluidsim.solvers.ns2d.__pythran__.solver",
    "fluidsim.solvers.ns2d.bouss.__pythran__.solver",
    "fluidsim.solvers.ns2d.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.solvers.ns2d.strat.__pythran__.solver",
    "fluidsim.solvers.ns3d.forcing.__pythran__.watu",
    "fluidsim.solvers.ns3d.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.solvers.ns3d.strat.__pythran__.solver",
    "fluidsim.solvers.plate2d.__pythran__.operators",
    "fluidsim.solvers.plate2d.output.__pythran__.correlations_freq",
    "fluidsim.solvers.sphere.sw1l.__pythran__.solver",
    "fluidsim.solvers.sw1l.__pythran__.operators",
    "fluidsim.solvers.sw1l.__pythran__.solver",
    "fluidsim.solvers.sw1l.output.__pythran__.base",
    "fluidsim.util.__pythran__.mini_oper_modif_resol"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "fluidsim",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Fluidsim is an extensible framework for studying fluid dynamics with\nnumerical simulations using Python. Fluidsim is an object-oriented library\nto develop solvers (mainly using pseudo-spectral methods) by writing mainly\nPython code. The result is very efficient even compared to a pure Fortran or\nC++ code since the time-consuming tasks are performed by optimized compiled\nfunctions.\n",
   "doc_url": "https://fluidsim.readthedocs.io",
   "home": "https://foss.heptapod.net/fluiddyn/fluidsim",
   "license": "LicenseRef-CeCILL",
   "license_file": "LICENSE.txt",
   "summary": "Framework for studying fluid dynamics with simulations."
  },
  "build": {
   "entry_points": [
    "fluidsim = fluidsim.util.console.__main__:run",
    "fluidsim-bench = fluidsim.util.console.__main__:run_bench",
    "fluidsim-bench-analysis = fluidsim.util.console.__main__:run_bench_analysis",
    "fluidsim-create-xml-description = fluidsim.base.output:run",
    "fluidsim-profile = fluidsim.util.console.__main__:run_profile",
    "fluidsim-test = fluidsim.util.testing:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "CyrilleBonamy",
    "paugier",
    "ashwinvis"
   ]
  },
  "package": {
   "name": "fluidsim",
   "version": "0.8.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_stdlib_stub"
   ],
   "host": [
    "pip",
    "python",
    "meson-python",
    "numpy",
    "transonic >=0.6.4",
    "pythran >=0.9.7"
   ],
   "run": [
    "python",
    "ipython",
    "transonic >=0.6.4",
    "fluidsim-core >=0.8.0",
    "fluidfft >=0.4.0",
    "numpy >=1.15.4",
    "matplotlib-base",
    "pandas",
    "xarray",
    "pytest",
    "rich",
    "importlib_metadata"
   ]
  },
  "source": {
   "sha256": "eb36c2d7d588fbb088af026683a12bb14aa126bbbc91b999009130d6cb7920f9",
   "url": "https://pypi.io/packages/source/f/fluidsim/fluidsim-0.8.2.tar.gz"
  },
  "test": {
   "imports": [
    "fluidsim",
    "fluidsim.base.output.__pythran__.increments",
    "fluidsim.base.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.base.time_stepping.__pythran__.pseudo_spect",
    "fluidsim.operators.__pythran__.operators2d",
    "fluidsim.operators.__pythran__.operators3d",
    "fluidsim.solvers.ns2d.__pythran__.solver",
    "fluidsim.solvers.ns2d.bouss.__pythran__.solver",
    "fluidsim.solvers.ns2d.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.solvers.ns2d.strat.__pythran__.solver",
    "fluidsim.solvers.ns3d.forcing.__pythran__.watu",
    "fluidsim.solvers.ns3d.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.solvers.ns3d.strat.__pythran__.solver",
    "fluidsim.solvers.plate2d.__pythran__.operators",
    "fluidsim.solvers.plate2d.output.__pythran__.correlations_freq",
    "fluidsim.solvers.sphere.sw1l.__pythran__.solver",
    "fluidsim.solvers.sw1l.__pythran__.operators",
    "fluidsim.solvers.sw1l.__pythran__.solver",
    "fluidsim.solvers.sw1l.output.__pythran__.base",
    "fluidsim.util.__pythran__.mini_oper_modif_resol"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "meson-python",
    "numpy",
    "pip",
    "python",
    "pythran",
    "transonic"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fluidfft",
    "fluidsim-core",
    "importlib_metadata",
    "ipython",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pytest",
    "python",
    "rich",
    "transonic",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fluidsim"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/fluidsim.json"
 },
 "raw_meta_yaml": "{% set name = \"fluidsim\" %}\n{% set version = \"0.8.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: eb36c2d7d588fbb088af026683a12bb14aa126bbbc91b999009130d6cb7920f9\n\nbuild:\n  number: 0\n  entry_points:\n    - fluidsim = fluidsim.util.console.__main__:run\n    - fluidsim-bench = fluidsim.util.console.__main__:run_bench\n    - fluidsim-bench-analysis = fluidsim.util.console.__main__:run_bench_analysis\n    - fluidsim-create-xml-description = fluidsim.base.output:run\n    - fluidsim-profile = fluidsim.util.console.__main__:run_profile\n    - fluidsim-test = fluidsim.util.testing:run\n  skip: true  # [py<39 or (win and py>311)]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n  host:\n    - pip\n    - python\n    - meson-python\n    - numpy\n    - transonic >=0.6.4\n    - pythran >=0.9.7\n    # pythran code needs clang-cl on windows\n    - clang  # [win]\n  run:\n    - python\n    - ipython\n    - transonic >=0.6.4\n    - fluidsim-core >=0.8.0\n    - fluidfft >=0.4.0\n    - numpy >=1.15.4\n    - matplotlib-base\n    - pandas\n    - xarray\n    - pytest\n    - rich\n    - importlib_metadata\n\ntest:\n  requires:\n    - pip\n  imports:\n    - fluidsim\n    # manual imports of few important Pythran extensions\n    - fluidsim.base.output.__pythran__.increments\n    - fluidsim.base.output.__pythran__.spatiotemporal_spectra\n    # A dynamic link library (DLL) initialization routine failed.\n    - fluidsim.base.time_stepping.__pythran__.pseudo_spect  # [not win]\n    - fluidsim.operators.__pythran__.operators2d\n    - fluidsim.operators.__pythran__.operators3d\n    - fluidsim.solvers.ns2d.__pythran__.solver\n    - fluidsim.solvers.ns2d.bouss.__pythran__.solver\n    - fluidsim.solvers.ns2d.output.__pythran__.spatiotemporal_spectra\n    - fluidsim.solvers.ns2d.strat.__pythran__.solver\n    - fluidsim.solvers.ns3d.forcing.__pythran__.watu\n    - fluidsim.solvers.ns3d.output.__pythran__.spatiotemporal_spectra\n    - fluidsim.solvers.ns3d.strat.__pythran__.solver\n    - fluidsim.solvers.plate2d.__pythran__.operators\n    - fluidsim.solvers.plate2d.output.__pythran__.correlations_freq\n    - fluidsim.solvers.sphere.sw1l.__pythran__.solver\n    - fluidsim.solvers.sw1l.__pythran__.operators\n    - fluidsim.solvers.sw1l.__pythran__.solver\n    - fluidsim.solvers.sw1l.output.__pythran__.base\n    - fluidsim.util.__pythran__.mini_oper_modif_resol\n  # TODO: retry when https://foss.heptapod.net/fluiddyn/fluidsim/-/issues/157 is fixed\n  # commands:\n  #   - python -m pip install pytest-allclose pytest-mock\n  #   - fluidsim-test -v\n\nabout:\n  home: https://foss.heptapod.net/fluiddyn/fluidsim\n  license: LicenseRef-CeCILL\n  license_file: LICENSE.txt\n  summary: Framework for studying fluid dynamics with simulations.\n  description: |\n    Fluidsim is an extensible framework for studying fluid dynamics with\n    numerical simulations using Python. Fluidsim is an object-oriented library\n    to develop solvers (mainly using pseudo-spectral methods) by writing mainly\n    Python code. The result is very efficient even compared to a pure Fortran or\n    C++ code since the time-consuming tasks are performed by optimized compiled\n    functions.\n  doc_url: https://fluidsim.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - CyrilleBonamy\n    - paugier\n    - ashwinvis\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_stdlib_stub",
   "clang",
   "cxx_compiler_stub",
   "fluidfft",
   "fluidsim-core",
   "importlib_metadata",
   "ipython",
   "matplotlib-base",
   "meson-python",
   "numpy",
   "pandas",
   "pip",
   "pytest",
   "python",
   "pythran",
   "rich",
   "transonic",
   "xarray"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "clang",
    "cxx_compiler_stub",
    "meson-python",
    "numpy",
    "pip",
    "python",
    "pythran",
    "transonic"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "fluidfft",
    "fluidsim-core",
    "importlib_metadata",
    "ipython",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pytest",
    "python",
    "rich",
    "transonic",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "meson-python",
    "numpy",
    "pip",
    "python",
    "pythran >=0.9.7",
    "transonic >=0.6.4"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fluidfft >=0.4.0",
    "fluidsim-core >=0.8.0",
    "importlib_metadata",
    "ipython",
    "matplotlib-base",
    "numpy >=1.15.4",
    "pandas",
    "pytest",
    "python",
    "rich",
    "transonic >=0.6.4",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/f/fluidsim/fluidsim-0.8.2.tar.gz",
 "version": "0.8.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/fluidsim.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Fluidsim is an extensible framework for studying fluid dynamics with\nnumerical simulations using Python. Fluidsim is an object-oriented library\nto develop solvers (mainly using pseudo-spectral methods) by writing mainly\nPython code. The result is very efficient even compared to a pure Fortran or\nC++ code since the time-consuming tasks are performed by optimized compiled\nfunctions.\n",
   "doc_url": "https://fluidsim.readthedocs.io",
   "home": "https://foss.heptapod.net/fluiddyn/fluidsim",
   "license": "LicenseRef-CeCILL",
   "license_file": "LICENSE.txt",
   "summary": "Framework for studying fluid dynamics with simulations."
  },
  "build": {
   "entry_points": [
    "fluidsim = fluidsim.util.console.__main__:run",
    "fluidsim-bench = fluidsim.util.console.__main__:run_bench",
    "fluidsim-bench-analysis = fluidsim.util.console.__main__:run_bench_analysis",
    "fluidsim-create-xml-description = fluidsim.base.output:run",
    "fluidsim-profile = fluidsim.util.console.__main__:run_profile",
    "fluidsim-test = fluidsim.util.testing:run"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "CyrilleBonamy",
    "paugier",
    "ashwinvis"
   ]
  },
  "package": {
   "name": "fluidsim",
   "version": "0.8.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_stdlib_stub"
   ],
   "host": [
    "pip",
    "python",
    "meson-python",
    "numpy",
    "transonic >=0.6.4",
    "pythran >=0.9.7",
    "clang"
   ],
   "run": [
    "python",
    "ipython",
    "transonic >=0.6.4",
    "fluidsim-core >=0.8.0",
    "fluidfft >=0.4.0",
    "numpy >=1.15.4",
    "matplotlib-base",
    "pandas",
    "xarray",
    "pytest",
    "rich",
    "importlib_metadata"
   ]
  },
  "source": {
   "sha256": "eb36c2d7d588fbb088af026683a12bb14aa126bbbc91b999009130d6cb7920f9",
   "url": "https://pypi.io/packages/source/f/fluidsim/fluidsim-0.8.2.tar.gz"
  },
  "test": {
   "imports": [
    "fluidsim",
    "fluidsim.base.output.__pythran__.increments",
    "fluidsim.base.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.operators.__pythran__.operators2d",
    "fluidsim.operators.__pythran__.operators3d",
    "fluidsim.solvers.ns2d.__pythran__.solver",
    "fluidsim.solvers.ns2d.bouss.__pythran__.solver",
    "fluidsim.solvers.ns2d.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.solvers.ns2d.strat.__pythran__.solver",
    "fluidsim.solvers.ns3d.forcing.__pythran__.watu",
    "fluidsim.solvers.ns3d.output.__pythran__.spatiotemporal_spectra",
    "fluidsim.solvers.ns3d.strat.__pythran__.solver",
    "fluidsim.solvers.plate2d.__pythran__.operators",
    "fluidsim.solvers.plate2d.output.__pythran__.correlations_freq",
    "fluidsim.solvers.sphere.sw1l.__pythran__.solver",
    "fluidsim.solvers.sw1l.__pythran__.operators",
    "fluidsim.solvers.sw1l.__pythran__.solver",
    "fluidsim.solvers.sw1l.output.__pythran__.base",
    "fluidsim.util.__pythran__.mini_oper_modif_resol"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "meson-python",
    "numpy",
    "pip",
    "python",
    "pythran",
    "transonic"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "fluidfft",
    "fluidsim-core",
    "importlib_metadata",
    "ipython",
    "matplotlib-base",
    "numpy",
    "pandas",
    "pytest",
    "python",
    "rich",
    "transonic",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}