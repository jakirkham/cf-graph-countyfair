{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "mfront",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "MFront is a code generator which translates a set of closely related domain specific languages into plain C++ on top of the TFEL library. Those languages cover three kinds of material knowledge:\nmaterial properties (for instance the Young modulus, the thermal conductivity, etc.)\nmechanical behaviours. Numerical performances of generated mechanical behaviours were given a particular attention. Various benchmarks show that MFront implementations are competitive with native implementations available in the Cast3M, Code-Aster, Abaqus Standard and Cyrano3 solvers.\nsimple point-wise models, such as material swelling used in fuel performance codes.\n",
   "dev_url": "http://tfel.sourceforge.net/devel.html",
   "doc_url": "http://tfel.sourceforge.net/documentations.html",
   "home": "http://tfel.sourceforge.net",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENCE-GNU-GPL",
   "summary": "MFront, a code generation tool dedicated to material knowledge"
  },
  "build": {
   "detect_binary_files_with_prefix": true,
   "number": "1",
   "run_exports": [
    "mfront"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio"
   ]
  },
  "package": {
   "name": "mfront",
   "version": "4.2.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp"
   ],
   "host": [
    "libboost-python-devel",
    "python",
    "zlib"
   ],
   "run": [
    "python",
    "libstdcxx-ng",
    "libgcc-ng"
   ]
  },
  "source": {
   "fn": "mfront_4.2.1.tar.gz",
   "patches": null,
   "sha256": "14f27257014a992a4e511f35390e4b9a086f6a5ed74087f891f8c00306f1758f",
   "url": "https://github.com/thelfer/tfel/archive/refs/tags/TFEL-4.2.1.tar.gz"
  },
  "test": {
   "commands": [
    "tfel-config --version",
    "tfel-doc --version",
    "tfel-check --version",
    "mtest --version",
    "mfront --list-stress-criteria",
    "mfront-doc --version",
    "mfront-query --version",
    "mfm --version",
    "test -f $PREFIX/lib/libTFELConfig.so",
    "test -f $PREFIX/lib/libTFELUnicodeSupport.so",
    "test -f $PREFIX/lib/libTFELGlossary.so",
    "test -f $PREFIX/lib/libTFELException.so",
    "test -f $PREFIX/lib/libTFELUtilities.so"
   ],
   "imports": [
    "tfel",
    "tfel.math",
    "tfel.material"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libgomp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libboost-python-devel",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgcc-ng",
    "libstdcxx-ng",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "MFront is a code generator which translates a set of closely related domain specific languages into plain C++ on top of the TFEL library. Those languages cover three kinds of material knowledge:\nmaterial properties (for instance the Young modulus, the thermal conductivity, etc.)\nmechanical behaviours. Numerical performances of generated mechanical behaviours were given a particular attention. Various benchmarks show that MFront implementations are competitive with native implementations available in the Cast3M, Code-Aster, Abaqus Standard and Cyrano3 solvers.\nsimple point-wise models, such as material swelling used in fuel performance codes.\n",
   "dev_url": "http://tfel.sourceforge.net/devel.html",
   "doc_url": "http://tfel.sourceforge.net/documentations.html",
   "home": "http://tfel.sourceforge.net",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENCE-GNU-GPL",
   "summary": "MFront, a code generation tool dedicated to material knowledge"
  },
  "build": {
   "detect_binary_files_with_prefix": true,
   "number": "1",
   "run_exports": [
    "mfront"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio"
   ]
  },
  "package": {
   "name": "mfront",
   "version": "4.2.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "ninja",
    "flang",
    "clang",
    "lld"
   ],
   "host": [
    "libboost-python-devel",
    "python",
    "zlib"
   ],
   "run": [
    "python",
    "libstdcxx-ng",
    "libgcc-ng"
   ]
  },
  "source": {
   "fn": "mfront_4.2.1.tar.gz",
   "patches": [
    "patches/support_llvm-flang.patch"
   ],
   "sha256": "14f27257014a992a4e511f35390e4b9a086f6a5ed74087f891f8c00306f1758f",
   "url": "https://github.com/thelfer/tfel/archive/refs/tags/TFEL-4.2.1.tar.gz"
  },
  "test": {
   "commands": [
    "tfel-config --version",
    "tfel-doc --version",
    "tfel-check --version",
    "mtest --version",
    "mfront --list-stress-criteria",
    "mfront-doc --version",
    "mfront-query --version",
    "mfm --version",
    "test -f $PREFIX/lib/libTFELConfig.so",
    "test -f $PREFIX/lib/libTFELUnicodeSupport.so",
    "test -f $PREFIX/lib/libTFELGlossary.so",
    "test -f $PREFIX/lib/libTFELException.so",
    "test -f $PREFIX/lib/libTFELUtilities.so"
   ],
   "imports": [
    "tfel",
    "tfel.math",
    "tfel.material"
   ]
  }
 },
 "name": "mfront",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "mfront"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/mfront.json"
 },
 "raw_meta_yaml": "{% set name = \"mfront\" %}\n{% set version = \"4.2.1\" %}\n{% set sha256 = \"14f27257014a992a4e511f35390e4b9a086f6a5ed74087f891f8c00306f1758f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}_{{ version }}.tar.gz\n  url: https://github.com/thelfer/tfel/archive/refs/tags/TFEL-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - patches/support_llvm-flang.patch  # [win]\n\nbuild:\n  number: 1\n  skip: true  # [py2k or osx or (python_impl == 'pypy')]\n  skip: true  # [win and py<39]\n  detect_binary_files_with_prefix: true\n  run_exports:\n    - {{ pin_subpackage('mfront', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}  # [not win]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [not win]\n    - ninja                       # [win]\n    - flang                       # [win]\n    - clang                       # [win]\n    - lld                         # [win]\n    - libgomp  # [linux]\n    - llvm-openmp  # [osx]    \n  host:\n    - libboost-python-devel\n    - python\n    - zlib  # [linux]\n  run:\n    - python\n    - libstdcxx-ng  # [linux]\n    - libgcc-ng  # [linux]\n\ntest:\n  commands:\n    - tfel-config --version\n    - tfel-doc --version  # [linux]\n    - tfel-check --version  # [linux]\n    - mtest --version\n    - mfront --list-stress-criteria\n    - mfront-doc --version\n    - mfront-query --version\n    - mfm --version\n    - test -f $PREFIX/lib/libTFELConfig.so  # [linux]\n    - test -f $PREFIX/lib/libTFELUnicodeSupport.so  # [linux]\n    - test -f $PREFIX/lib/libTFELGlossary.so  # [linux]\n    - test -f $PREFIX/lib/libTFELException.so  # [linux]\n    - test -f $PREFIX/lib/libTFELUtilities.so  # [linux]\n\n  imports:\n    - tfel\n    - tfel.math\n    - tfel.material\n\nabout:\n  home: http://tfel.sourceforge.net\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENCE-GNU-GPL\n  summary: MFront, a code generation tool dedicated to material knowledge\n  description: |\n    MFront is a code generator which translates a set of closely related domain specific languages into plain C++ on top of the TFEL library. Those languages cover three kinds of material knowledge:\n    material properties (for instance the Young modulus, the thermal conductivity, etc.)\n    mechanical behaviours. Numerical performances of generated mechanical behaviours were given a particular attention. Various benchmarks show that MFront implementations are competitive with native implementations available in the Cast3M, Code-Aster, Abaqus Standard and Cyrano3 solvers.\n    simple point-wise models, such as material swelling used in fuel performance codes.\n  doc_url: http://tfel.sourceforge.net/documentations.html\n  dev_url: http://tfel.sourceforge.net/devel.html\n\nextra:\n  recipe-maintainers:\n    - Krande\n    - ldallolio\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "c_stdlib_stub",
   "clang",
   "cmake",
   "cxx_compiler_stub",
   "flang",
   "fortran_compiler_stub",
   "libboost-python-devel",
   "libgcc-ng",
   "libgomp",
   "libstdcxx-ng",
   "lld",
   "make",
   "ninja",
   "python",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "flang",
    "fortran_compiler_stub",
    "libgomp",
    "lld",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libboost-python-devel",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "libgcc-ng",
    "libstdcxx-ng",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "flang",
    "fortran_compiler_stub",
    "libgomp",
    "lld",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libboost-python-devel",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgcc-ng",
    "libstdcxx-ng",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/thelfer/tfel/archive/refs/tags/TFEL-4.2.1.tar.gz",
 "version": "4.2.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/mfront.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "MFront is a code generator which translates a set of closely related domain specific languages into plain C++ on top of the TFEL library. Those languages cover three kinds of material knowledge:\nmaterial properties (for instance the Young modulus, the thermal conductivity, etc.)\nmechanical behaviours. Numerical performances of generated mechanical behaviours were given a particular attention. Various benchmarks show that MFront implementations are competitive with native implementations available in the Cast3M, Code-Aster, Abaqus Standard and Cyrano3 solvers.\nsimple point-wise models, such as material swelling used in fuel performance codes.\n",
   "dev_url": "http://tfel.sourceforge.net/devel.html",
   "doc_url": "http://tfel.sourceforge.net/documentations.html",
   "home": "http://tfel.sourceforge.net",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENCE-GNU-GPL",
   "summary": "MFront, a code generation tool dedicated to material knowledge"
  },
  "build": {
   "detect_binary_files_with_prefix": true,
   "number": "1",
   "run_exports": [
    "mfront"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio"
   ]
  },
  "package": {
   "name": "mfront",
   "version": "4.2.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "flang",
    "clang",
    "lld"
   ],
   "host": [
    "libboost-python-devel",
    "python"
   ],
   "run": [
    "python"
   ]
  },
  "source": {
   "fn": "mfront_4.2.1.tar.gz",
   "patches": [
    "patches/support_llvm-flang.patch"
   ],
   "sha256": "14f27257014a992a4e511f35390e4b9a086f6a5ed74087f891f8c00306f1758f",
   "url": "https://github.com/thelfer/tfel/archive/refs/tags/TFEL-4.2.1.tar.gz"
  },
  "test": {
   "commands": [
    "tfel-config --version",
    "mtest --version",
    "mfront --list-stress-criteria",
    "mfront-doc --version",
    "mfront-query --version",
    "mfm --version"
   ],
   "imports": [
    "tfel",
    "tfel.math",
    "tfel.material"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "flang",
    "lld",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libboost-python-devel",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}