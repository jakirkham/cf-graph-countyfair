{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "pandera",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "A simple, zero-configuration Python library to help you build\nconfidence in the quality of your dataframe-like containers through\ndata validation and property-based testing.\n",
   "dev_url": "https://github.com/unionai-oss/pandera",
   "doc_url": "https://pandera.readthedocs.io/en/latest/",
   "home": "https://github.com/pandera-dev/pandera",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "The open source framework for precision data testing"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "pandera",
   "recipe-maintainers": [
    "cosmicBboy",
    "fhoehle"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "python",
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pandera-base",
    "requirements": {
     "host": [
      "python >=3.8",
      "pip"
     ],
     "run": [
      "python >=3.8",
      "multimethod <=1.10.0",
      "numpy >=1.19.0",
      "packaging >=20.0",
      "pandas >=1.2.0",
      "pydantic >=1.5.0",
      "typeguard >=3.0.2",
      "typing_inspect >=0.6.0",
      "wrapt"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera",
    "requirements": {
     "run": [
      "pandera-base"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-strategies",
    "requirements": {
     "run": [
      "pandera-base",
      "hypothesis >=6.92.7"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.strategies"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-hypotheses",
    "requirements": {
     "run": [
      "pandera-base",
      "scipy"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.api.hypotheses"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-io",
    "requirements": {
     "run": [
      "pandera-base",
      "pyyaml >=5.1",
      "black",
      "frictionless <=4.40.8"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.io"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-polars",
    "requirements": {
     "run": [
      "pandera-base",
      "polars >=0.20.0"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.polars"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-pyspark",
    "requirements": {
     "run": [
      "pandera-base",
      "pyspark >=3.2.0"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.pyspark_accessor",
      "pandera.typing.pyspark"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin",
    "requirements": {
     "run": [
      "pandera-base",
      "modin"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin-ray",
    "requirements": {
     "run": [
      "pandera-base",
      "modin-ray"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin-dask",
    "requirements": {
     "run": [
      "pandera-base",
      "modin-dask"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-dask",
    "requirements": {
     "run": [
      "pandera-base",
      "dask",
      "distributed"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.dask_accessor",
      "pandera.typing.dask"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-mypy",
    "requirements": {
     "run": [
      "pandera-base",
      "mypy",
      "pandas-stubs"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.mypy"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-fastapi",
    "requirements": {
     "run": [
      "pandera-base",
      "fastapi"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.fastapi"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-geopandas",
    "requirements": {
     "run": [
      "pandera-base",
      "geopandas",
      "shapely"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.geopandas"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pandera-suite",
   "version": "0.20.3"
  },
  "source": {
   "sha256": "d8542a68493d2dfe3226c186cc145be8d27535d7edf396178e93811515fe3470",
   "url": "https://pypi.io/packages/source/p/pandera/pandera-0.20.3.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "black",
    "dask",
    "distributed",
    "fastapi",
    "frictionless",
    "geopandas",
    "hypothesis",
    "modin",
    "modin-dask",
    "modin-ray",
    "multimethod",
    "mypy",
    "numpy",
    "packaging",
    "pandas",
    "pandas-stubs",
    "pandera-base",
    "polars",
    "pydantic",
    "pyspark",
    "python",
    "pyyaml",
    "scipy",
    "shapely",
    "typeguard",
    "typing_inspect",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "A simple, zero-configuration Python library to help you build\nconfidence in the quality of your dataframe-like containers through\ndata validation and property-based testing.\n",
   "dev_url": "https://github.com/unionai-oss/pandera",
   "doc_url": "https://pandera.readthedocs.io/en/latest/",
   "home": "https://github.com/pandera-dev/pandera",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "The open source framework for precision data testing"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "pandera",
   "recipe-maintainers": [
    "cosmicBboy",
    "fhoehle"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "python",
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pandera-base",
    "requirements": {
     "host": [
      "python >=3.8",
      "pip"
     ],
     "run": [
      "python >=3.8",
      "multimethod <=1.10.0",
      "numpy >=1.19.0",
      "packaging >=20.0",
      "pandas >=1.2.0",
      "pydantic >=1.5.0",
      "typeguard >=3.0.2",
      "typing_inspect >=0.6.0",
      "wrapt"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera",
    "requirements": {
     "run": [
      "pandera-base"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-strategies",
    "requirements": {
     "run": [
      "pandera-base",
      "hypothesis >=6.92.7"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.strategies"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-hypotheses",
    "requirements": {
     "run": [
      "pandera-base",
      "scipy"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.api.hypotheses"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-io",
    "requirements": {
     "run": [
      "pandera-base",
      "pyyaml >=5.1",
      "black",
      "frictionless <=4.40.8"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.io"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-polars",
    "requirements": {
     "run": [
      "pandera-base",
      "polars >=0.20.0"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.polars"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-pyspark",
    "requirements": {
     "run": [
      "pandera-base",
      "pyspark >=3.2.0"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.pyspark_accessor",
      "pandera.typing.pyspark"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin",
    "requirements": {
     "run": [
      "pandera-base",
      "modin"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin-ray",
    "requirements": {
     "run": [
      "pandera-base",
      "modin-ray"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-modin-dask",
    "requirements": {
     "run": [
      "pandera-base",
      "modin-dask"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.modin_accessor",
      "pandera.typing.modin"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-dask",
    "requirements": {
     "run": [
      "pandera-base",
      "dask",
      "distributed"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.accessors.dask_accessor",
      "pandera.typing.dask"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-mypy",
    "requirements": {
     "run": [
      "pandera-base",
      "mypy",
      "pandas-stubs"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.mypy"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-fastapi",
    "requirements": {
     "run": [
      "pandera-base",
      "fastapi"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.fastapi"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "pandera-geopandas",
    "requirements": {
     "run": [
      "pandera-base",
      "geopandas",
      "shapely"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "pandera",
      "pandera.typing.geopandas"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pandera-suite",
   "version": "0.20.3"
  },
  "source": {
   "sha256": "d8542a68493d2dfe3226c186cc145be8d27535d7edf396178e93811515fe3470",
   "url": "https://pypi.io/packages/source/p/pandera/pandera-0.20.3.tar.gz"
  }
 },
 "name": "pandera-suite",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pandera",
   "pandera-base",
   "pandera-dask",
   "pandera-fastapi",
   "pandera-geopandas",
   "pandera-hypotheses",
   "pandera-io",
   "pandera-modin",
   "pandera-modin-dask",
   "pandera-modin-ray",
   "pandera-mypy",
   "pandera-polars",
   "pandera-pyspark",
   "pandera-strategies"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pandera.json"
 },
 "raw_meta_yaml": "{% set name = \"pandera\" %}\n{% set version = \"0.20.3\" %}\n\npackage:\n  name: pandera-suite\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d8542a68493d2dfe3226c186cc145be8d27535d7edf396178e93811515fe3470\n\nbuild:\n  number: 0\n\noutputs:\n  - name: pandera-base\n    build:\n      noarch: python\n      script:\n        - python -m pip install . --no-deps -vv\n\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n      commands:\n        - pip check\n\n    requirements:\n      host:\n        - python >=3.8\n        - pip\n      run:\n        - python >=3.8\n        - multimethod <=1.10.0\n        - numpy >=1.19.0\n        - packaging >=20.0\n        - pandas >=1.2.0\n        - pydantic >=1.5.0\n        - typeguard >=3.0.2\n        - typing_inspect >=0.6.0\n        - wrapt\n\n  - name: pandera\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n\n  - name: pandera-strategies\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.strategies\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - hypothesis >=6.92.7\n\n  - name: pandera-hypotheses\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.api.hypotheses\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - scipy\n\n  - name: pandera-io\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.io\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - pyyaml >=5.1\n        - black\n        - frictionless <=4.40.8\n\n  - name: pandera-polars\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.typing.polars\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - polars >=0.20.0\n\n  - name: pandera-pyspark\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.accessors.pyspark_accessor\n        - pandera.typing.pyspark\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - pyspark >=3.2.0\n\n  - name: pandera-modin\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.accessors.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin\n\n  - name: pandera-modin-ray\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.accessors.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin-ray\n\n  - name: pandera-modin-dask\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.accessors.modin_accessor\n        - pandera.typing.modin\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - modin-dask\n\n  - name: pandera-dask\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.accessors.dask_accessor\n        - pandera.typing.dask\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - dask\n        - distributed\n\n  - name: pandera-mypy\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.mypy\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - mypy\n        - pandas-stubs\n\n  - name: pandera-fastapi\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.typing.fastapi\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - fastapi\n\n  - name: pandera-geopandas\n    build:\n      noarch: python\n    test:\n      requires:\n        - pip\n      imports:\n        - pandera\n        - pandera.typing.geopandas\n      commands:\n        - pip check\n    requirements:\n      run:\n        - {{ pin_subpackage('pandera-base', max_pin=\"x.x.x\") }}\n        - geopandas\n        - shapely\n\nabout:\n  home: https://github.com/pandera-dev/pandera\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: The open source framework for precision data testing\n  description: |\n    A simple, zero-configuration Python library to help you build\n    confidence in the quality of your dataframe-like containers through\n    data validation and property-based testing.\n  doc_url: https://pandera.readthedocs.io/en/latest/\n  dev_url: https://github.com/unionai-oss/pandera\n\nextra:\n  feedstock-name: pandera\n  recipe-maintainers:\n    - cosmicBboy\n    - fhoehle\n",
 "req": {
  "__set__": true,
  "elements": [
   "black",
   "dask",
   "distributed",
   "fastapi",
   "frictionless",
   "geopandas",
   "hypothesis",
   "modin",
   "modin-dask",
   "modin-ray",
   "multimethod",
   "mypy",
   "numpy",
   "packaging",
   "pandas",
   "pandas-stubs",
   "pandera-base",
   "pip",
   "polars",
   "pydantic",
   "pyspark",
   "python",
   "pyyaml",
   "scipy",
   "shapely",
   "typeguard",
   "typing_inspect",
   "wrapt"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "black",
    "dask",
    "distributed",
    "fastapi",
    "frictionless",
    "geopandas",
    "hypothesis",
    "modin",
    "modin-dask",
    "modin-ray",
    "multimethod",
    "mypy",
    "numpy",
    "packaging",
    "pandas",
    "pandas-stubs",
    "pandera-base",
    "polars",
    "pydantic",
    "pyspark",
    "python",
    "pyyaml",
    "scipy",
    "shapely",
    "typeguard",
    "typing_inspect",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.8"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "black",
    "dask",
    "distributed",
    "fastapi",
    "frictionless <=4.40.8",
    "geopandas",
    "hypothesis >=6.92.7",
    "modin",
    "modin-dask",
    "modin-ray",
    "multimethod <=1.10.0",
    "mypy",
    "numpy >=1.19.0",
    "packaging >=20.0",
    "pandas >=1.2.0",
    "pandas-stubs",
    "pandera-base",
    "polars >=0.20.0",
    "pydantic >=1.5.0",
    "pyspark >=3.2.0",
    "python >=3.8",
    "pyyaml >=5.1",
    "scipy",
    "shapely",
    "typeguard >=3.0.2",
    "typing_inspect >=0.6.0",
    "wrapt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pandera/pandera-0.20.3.tar.gz",
 "version": "0.20.3",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pandera.json"
 }
}